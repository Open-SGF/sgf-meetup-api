// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package syncdynamodb

import (
	"context"
	"github.com/google/wire"
	"sgf-meetup-api/pkg/shared/appconfig"
	"sgf-meetup-api/pkg/shared/db"
	"sgf-meetup-api/pkg/shared/logging"
	"sgf-meetup-api/pkg/syncdynamodb/syncdynamodbconfig"
)

// Injectors from wire.go:

func InitService(ctx context.Context) (*Service, error) {
	awsConfigManagerImpl := appconfig.NewAwsConfigManager()
	config, err := syncdynamodbconfig.NewConfig(ctx, awsConfigManagerImpl)
	if err != nil {
		return nil, err
	}
	common := config.Common
	dbConfig := common.DynamoDB
	awsConfig := appconfig.AwsConfigProvider(awsConfigManagerImpl)
	loggingConfig := common.Logging
	logger := logging.DefaultLogger(loggingConfig)
	client, err := db.NewClient(ctx, dbConfig, awsConfig, logger)
	if err != nil {
		return nil, err
	}
	service := NewService(config, client, logger)
	return service, nil
}

// wire.go:

var CommonProviders = wire.NewSet(syncdynamodbconfig.ConfigProviders, logging.DefaultLogger)
